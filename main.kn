func main()
	var curl: \src\curl@Curl :: \src\curl@makeCurl()
	
	var curlopt_url: \src\curl@Curloption :: %URL
	
	do curl.curl_easy_setopt_str(curlopt_url $ int, "http://www.yahoo.co.jp")
	
	var curlopt_header: \src\curl@Curloption :: %HEADER
	do curl.curl_easy_setopt_int(curlopt_header $ int, 1)
	
	var curle_ok: \src\curl@Curlcode :: %OK
	
	var response: \src\response@Response :: #\src\response@Response
	
	do curl.curl_config_easy_response(&response)
	do curl.curl_config_easy_header(&response)
	
	do cui@print("ready to perform\n")
	
	var task: \src\curl@CurlAsyncTask :: curl.curl_async_perform()
	do cui@print("async requesting!\n")
	;do cui@print("waiting\n")
	do task.get()
	
	
	;do curl.curl_testfunc()
	var res: int :: 0
	
	if(res = (curle_ok $ int))
		do cui@print("request succedded!\n")
	else
		do cui@print(res.toStr() ~ "\n")
		do cui@print("some error occored...\n")
	end if
	
	do cui@print("----------header-------------\n")
	;do cui@print(response.header ~ "\n")
	do cui@print("-----------body--------------\n")
	;do cui@print(response.body ~ "\n")
	do curl.curl_easy_cleanup()
	do cui@print("task finished\n")
end func
