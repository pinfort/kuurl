func syncExample(curl: \src\curl@Curl): int
	do cui@print("sync requesting!\n")
	ret curl.easy_perform()
end func

func asyncExample(curl: \src\curl@Curl): int
	var task: \src\curl@CurlAsyncTask :: curl.async_perform()
	do cui@print("async requesting!\n")
	ret task.get()
end func

func main()
	do cui@print("task starting\n")
	var curl: \src\curl@Curl :: \src\curl@makeCurl()
	
	; リクエストURLの設定
	var curlopt_url: \src\curl@CurlOption :: %URL
	do curl.easy_setopt_str(curlopt_url $ int, "https://github.com/pinfort/kuurl/archive/master.zip")
	
	;レスポンスを受け取るインスタンス
	var response: \src\curl@Response :: #\src\curl@Response
	
	;受け取るインスタンスを設定
	do curl.config_easy_response(&response)
	do curl.config_easy_header(&response)
	
	do cui@print("ready to perform\n")
	
	;リクエスト実行
	;var res: int :: @syncExample(curl)
	var res: int :: @asyncExample(curl)
	
	;終了コードのチェック
	var curle_ok: \src\curl@CurlCode :: %OK
	if(res = (curle_ok $ int))
		do cui@print("request succedded!\n")
	else
		do cui@print(res.toStr() ~ "\n")
		do cui@print("some error occored...\n")
	end if
	
	;レスポンス内容の表示
	do cui@print("----------header-------------\n")
	do cui@print(response.header ~ "\n")
	do cui@print("-----------body--------------\n")
	do cui@print(response.body ~ "\n")
	do cui@print("-----------bin---------------\n")
	for i(0, ^response.binary_body - 1)
		do cui@print(response.binary_body[i].toStr())
	end for
	do cui@print("\n")
	
	;後処理
	do curl.easy_cleanup()
	do cui@print("task finished\n")
end func
